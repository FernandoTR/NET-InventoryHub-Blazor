@page "/fetchproducts"

<h3>Product List</h3>

@if (products == null)
{
    <p>Loading...</p>
}
else if (products.Length == 0)
{
    <p>No products found.</p>
}
else
{
    <ul>
        @foreach (var product in products)
        {
            <li>
                <strong>@product.Name</strong> - $@product.Price
                <br />
                Stock: @product.Stock
                <br />
                Category: @product.Category?.Name
            </li>
        }
    </ul>
}

@code {
    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var http = new HttpClient { BaseAddress = new Uri("http://localhost:7265") };

            var response = await http.GetAsync("/api/productlist");
            response.EnsureSuccessStatusCode();

            var json = await response.Content.ReadAsStringAsync();

            products = System.Text.Json.JsonSerializer.Deserialize<Product[]>(json,
                new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            products = Array.Empty<Product>();
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public double Price { get; set; }
        public int Stock { get; set; }
        public Category? Category { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }
}
